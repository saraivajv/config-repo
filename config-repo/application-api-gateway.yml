spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          include-expression: "'crud-service'.equals(serviceId) || 'db-service'.equals(serviceId)"
      default-filters:
        - name: Resilience4JCircuitBreaker
          args:
            name: dbServiceCircuitBreaker
        - name: Retry
          args:
            retries: 3
            statusCodes: 500,502,503
        - name: RateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 10
              burstCapacity: 20
              requestedTokens: 1

  config:
    import: "optional:configserver:http://localhost:8888"

server:
  port: 8080

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone:
        http://localhost:8761/eureka,http://localhost:8762/eureka,http://localhost:8763/eureka

management:
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0
    zipkin:
      tracing:
        endpoint: http://localhost:9411/api/v2/spans

logging:
  level:
    com.netflix.discovery: DEBUG
    org.springframework.cloud.netflix.eureka: DEBUG
    io.github.resilience4j.circuitbreaker: DEBUG
    io.github.resilience4j.retry: DEBUG      
    io.github.resilience4j.ratelimiter: DEBUG
    org.springframework.cloud.gateway: DEBUG 

resilience4j:
  retry:
    instances:
      default:
        maxAttempts: 3
        waitDuration: 1000ms
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
    instances:
      dbServiceCircuitBreaker:
        failureRateThreshold: 50
        slidingWindowSize: 2
        waitDurationInOpenState: 10s
